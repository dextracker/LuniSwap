{"ast":null,"code":"var _jsxFileName = \"/home/devpc/LoonySwap/uniswap-interface/src/components/Order/index.tsx\";\n// import { Currency, Pair } from '@uniswap/sdk'\n// import React, { useState, useContext, useCallback } from 'react'\nimport React, { useState } from 'react'; //import styled, { ThemeContext } from 'styled-components'\n\nimport styled from 'styled-components';\nimport { darken } from 'polished'; //import { useCurrencyBalance } from '../../state/wallet/hooks'\n//import CurrencySearchModal from '../SearchModal/CurrencySearchModal'\n//import CurrencyLogo from '../CurrencyLogo'\n//import DoubleCurrencyLogo from '../DoubleLogo'\n//import { RowBetween } from '../Row'\n//import { TYPE } from '../../theme'\n//import { Input as NumericalInput } from '../NumericalInput'\n//import { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\n\nimport { ButtonLight } from '../../components/Button';\nimport { RowBetween } from '../../components/Row';\nimport { useLuniSwapContract, useOrderListContract } from '../../hooks/useContract'; //import {useSwapCallback} from '../../hooks/useSwapCallback'\n//import { useActiveWeb3React } from '../../hooks'\n//import { useTranslation } from 'react-i18next'\n// const InputRow = styled.div<{ selected: boolean }>`\n//   ${({ theme }) => theme.flexRowNoWrap}\n//   align-items: center;\n//   padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n// `\n// const CurrencySelect = styled.button<{ selected: boolean }>`\n//   align-items: center;\n//   height: 2.2rem;\n//   font-size: 20px;\n//   font-weight: 500;\n//   background-color: ${({ selected, theme }) => (selected ? theme.bg1 : theme.primary1)};\n//   color: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n//   border-radius: 12px;\n//   box-shadow: ${({ selected }) => (selected ? 'none' : '0px 6px 10px rgba(0, 0, 0, 0.075)')};\n//   outline: none;\n//   cursor: pointer;\n//   user-select: none;\n//   border: none;\n//   padding: 0 0.5rem;\n//   :focus,\n//   :hover {\n//     background-color: ${({ selected, theme }) => (selected ? theme.bg2 : darken(0.05, theme.primary1))};\n//   }\n// `\n\nconst LabelRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({\n  theme\n}) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({\n  theme\n}) => darken(0.2, theme.text2)};\n  }\n`; // const Aligner = styled.span`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n// `\n// const StyledDropDown = styled(DropDown)<{ selected: boolean }>`\n//   margin: 0 0.25rem 0 0.5rem;\n//   height: 35%;\n//   path {\n//     stroke: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n//     stroke-width: 1.5px;\n//   }\n// `\n\nconst InputPanel = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap}\n  position: relative;\n  border-radius: ${({\n  hideInput\n}) => hideInput ? '8px' : '20px'};\n  background-color: ${({\n  theme\n}) => theme.bg2};\n  z-index: 1;\n`;\nconst Container = styled.div`\n  border-radius: ${({\n  hideInput\n}) => hideInput ? '8px' : '20px'};\n  border: 1px solid ${({\n  theme\n}) => theme.bg2};\n  background-color: ${({\n  theme\n}) => theme.bg1};\n`; // const StyledTokenName = styled.span<{ active?: boolean }>`\n//   ${({ active }) => (active ? '  margin: 0 0.25rem 0 0.75rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\n//   font-size:  ${({ active }) => (active ? '20px' : '16px')};\n// `\n// const StyledBalanceMax = styled.button`\n//   height: 28px;\n//   background-color: ${({ theme }) => theme.primary5};\n//   border: 1px solid ${({ theme }) => theme.primary5};\n//   border-radius: 0.5rem;\n//   font-size: 0.875rem;\n//   font-weight: 500;\n//   cursor: pointer;\n//   margin-right: 0.5rem;\n//   color: ${({ theme }) => theme.primaryText1};\n//   :hover {\n//     border: 1px solid ${({ theme }) => theme.primary1};\n//   }\n//   :focus {\n//     border: 1px solid ${({ theme }) => theme.primary1};\n//     outline: none;\n//   }\n//   ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n//     margin-right: 0.5rem;\n//   `};\n// `\n\nexport default function LimitOrderButton({\n  //   onCurrencySelect,\n  //   currency,\n  //   disableCurrencySelect = false,\n  //   hideBalance = false,\n  //   pair = null, // used for double token logo\n  hideInput = false,\n  //   otherCurrency,\n  id //   showCommonBases  \n\n}) {\n  const [LimitClick, StopClick] = useState(false); //const { t } = useTranslation()\n  //   const [modalOpen, setModalOpen] = useState(false)\n  //const { account } = useActiveWeb3React()\n  //const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  //   const handleDismissSearch = useCallback(() => {\n  //     setModalOpen(false)\n  //   }, [setModalOpen])\n  //const theme = useContext(ThemeContext)\n\n  const luniContract = useLuniSwapContract();\n  const orderList = useOrderListContract();\n\n  const handleLimitClick = () => {\n    console.log(\"LimitOrder\");\n    console.log(luniContract);\n    console.log(luniContract === null || luniContract === void 0 ? void 0 : luniContract.functions);\n    console.log(luniContract === null || luniContract === void 0 ? void 0 : luniContract.populateTransaction);\n    console.log(orderList);\n  };\n\n  const handleStopClick = () => {\n    console.log(\"StopOrder\");\n    console.log(luniContract);\n    console.log(orderList);\n  };\n\n  return /*#__PURE__*/React.createElement(InputPanel, {\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    hideInput: hideInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, !hideInput && /*#__PURE__*/React.createElement(LabelRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonLight, {\n    id: \"LimitOrder\",\n    onClick: handleLimitClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, \"Limit Order\"), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ButtonLight, {\n    id: \"StopOrder\",\n    onClick: handleStopClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \"Stop Order\"))));\n}","map":{"version":3,"sources":["/home/devpc/LoonySwap/uniswap-interface/src/components/Order/index.tsx"],"names":["React","useState","styled","darken","ButtonLight","RowBetween","useLuniSwapContract","useOrderListContract","LabelRow","div","theme","flexRowNoWrap","text1","text2","InputPanel","flexColumnNoWrap","hideInput","bg2","Container","bg1","LimitOrderButton","id","LimitClick","StopClick","luniContract","orderList","handleLimitClick","console","log","functions","populateTransaction","handleStopClick"],"mappings":"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","sourcesContent":["// import { Currency, Pair } from '@uniswap/sdk'\nimport { Currency} from '@uniswap/sdk'\n// import React, { useState, useContext, useCallback } from 'react'\nimport React, { useState} from 'react'\n//import styled, { ThemeContext } from 'styled-components'\nimport styled from 'styled-components'\nimport { darken } from 'polished'\n//import { useCurrencyBalance } from '../../state/wallet/hooks'\n//import CurrencySearchModal from '../SearchModal/CurrencySearchModal'\n//import CurrencyLogo from '../CurrencyLogo'\n//import DoubleCurrencyLogo from '../DoubleLogo'\n//import { RowBetween } from '../Row'\n//import { TYPE } from '../../theme'\n//import { Input as NumericalInput } from '../NumericalInput'\n//import { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\n\nimport { ButtonLight} from '../../components/Button'\nimport { RowBetween } from '../../components/Row'\nimport {useLuniSwapContract, useOrderListContract} from '../../hooks/useContract'\n\n//import {useSwapCallback} from '../../hooks/useSwapCallback'\n\n\n//import { useActiveWeb3React } from '../../hooks'\n//import { useTranslation } from 'react-i18next'\n\n// const InputRow = styled.div<{ selected: boolean }>`\n//   ${({ theme }) => theme.flexRowNoWrap}\n//   align-items: center;\n//   padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n// `\n\n// const CurrencySelect = styled.button<{ selected: boolean }>`\n//   align-items: center;\n//   height: 2.2rem;\n//   font-size: 20px;\n//   font-weight: 500;\n//   background-color: ${({ selected, theme }) => (selected ? theme.bg1 : theme.primary1)};\n//   color: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n//   border-radius: 12px;\n//   box-shadow: ${({ selected }) => (selected ? 'none' : '0px 6px 10px rgba(0, 0, 0, 0.075)')};\n//   outline: none;\n//   cursor: pointer;\n//   user-select: none;\n//   border: none;\n//   padding: 0 0.5rem;\n\n//   :focus,\n//   :hover {\n//     background-color: ${({ selected, theme }) => (selected ? theme.bg2 : darken(0.05, theme.primary1))};\n//   }\n// `\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.text2)};\n  }\n`\n\n// const Aligner = styled.span`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n// `\n\n// const StyledDropDown = styled(DropDown)<{ selected: boolean }>`\n//   margin: 0 0.25rem 0 0.5rem;\n//   height: 35%;\n\n//   path {\n//     stroke: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n//     stroke-width: 1.5px;\n//   }\n// `\n\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.bg2};\n  z-index: 1;\n`\n\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  border: 1px solid ${({ theme }) => theme.bg2};\n  background-color: ${({ theme }) => theme.bg1};\n`\n\n// const StyledTokenName = styled.span<{ active?: boolean }>`\n//   ${({ active }) => (active ? '  margin: 0 0.25rem 0 0.75rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\n//   font-size:  ${({ active }) => (active ? '20px' : '16px')};\n\n// `\n\n// const StyledBalanceMax = styled.button`\n//   height: 28px;\n//   background-color: ${({ theme }) => theme.primary5};\n//   border: 1px solid ${({ theme }) => theme.primary5};\n//   border-radius: 0.5rem;\n//   font-size: 0.875rem;\n\n//   font-weight: 500;\n//   cursor: pointer;\n//   margin-right: 0.5rem;\n//   color: ${({ theme }) => theme.primaryText1};\n//   :hover {\n//     border: 1px solid ${({ theme }) => theme.primary1};\n//   }\n//   :focus {\n//     border: 1px solid ${({ theme }) => theme.primary1};\n//     outline: none;\n//   }\n\n//   ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n//     margin-right: 0.5rem;\n//   `};\n// `\n\ninterface LuniOrder {\n//   value: string\n//   onUserInput: (value: string) => void\n//   onMax?: () => void\n//   showMaxButton: boolean\n//   label?: string\n//   onCurrencySelect?: (currency: Currency) => void\n//   currency?: Currency | null\n//   disableCurrencySelect?: boolean\n//   hideBalance?: boolean\n//   pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n//   customBalanceText?: string\n}\n\nexport default function LimitOrderButton({\n  \n//   onCurrencySelect,\n//   currency,\n//   disableCurrencySelect = false,\n//   hideBalance = false,\n//   pair = null, // used for double token logo\n  hideInput = false,\n//   otherCurrency,\n  id,\n//   showCommonBases  \n}: LuniOrder) {\n  const [LimitClick, StopClick] = useState(false);\n\n  //const { t } = useTranslation()\n\n//   const [modalOpen, setModalOpen] = useState(false)\n  \n  //const { account } = useActiveWeb3React()\n  //const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  \n\n//   const handleDismissSearch = useCallback(() => {\n//     setModalOpen(false)\n//   }, [setModalOpen])\n//const theme = useContext(ThemeContext)\n const luniContract = useLuniSwapContract();\n const orderList = useOrderListContract();\n\n\n  const handleLimitClick = () =>{\n      \n      console.log(\"LimitOrder\");\n      \n      \n      console.log(luniContract);\n      console.log(luniContract?.functions);\n      console.log(luniContract?.populateTransaction);\n      console.log(orderList);\n  }\n  const handleStopClick = () =>{\n    console.log(\"StopOrder\");\n \n    console.log(luniContract);\n    console.log(orderList);\n}\n\n\n  return (\n    <InputPanel id={id}>\n        \n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n             {\n            <ButtonLight id=\"LimitOrder\" onClick={handleLimitClick}>\n                Limit Order\n            </ButtonLight>\n\n             }\n            <RowBetween/>\n            <ButtonLight id=\"StopOrder\" onClick={handleStopClick}>\n                Stop Order\n            </ButtonLight>\n            {/* <RowBetween>\n              <TYPE.body color={theme.text2} fontWeight={500} fontSize={14}>\n                {label}\n              </TYPE.body>\n              {account && (\n                <TYPE.body\n                  onClick={onMax}\n                  color={theme.text2}\n                  fontWeight={500}\n                  fontSize={14}\n                  style={{ display: 'inline', cursor: 'pointer' }}\n                >\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? (customBalanceText ?? 'Balance: ') + selectedCurrencyBalance?.toSignificant(6)\n                    : ' -'}\n                </TYPE.body>\n              )}\n            </RowBetween> */}\n          </LabelRow>\n        )}\n        {/* <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={val => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <StyledBalanceMax onClick={onMax}>MAX</StyledBalanceMax>\n              )}\n            </>\n          )}\n          <CurrencySelect\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                setModalOpen(true)\n              }\n            }}\n          >\n            <Aligner>\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={24} margin={true} />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size={'24px'} />\n              ) : null}\n              {pair ? (\n                <StyledTokenName className=\"pair-name-container\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </StyledTokenName>\n              ) : (\n                <StyledTokenName className=\"token-symbol-container\" active={Boolean(currency && currency.symbol)}>\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? currency.symbol.slice(0, 4) +\n                      '...' +\n                      currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)\n                    : currency?.symbol) || t('selectToken')}\n                </StyledTokenName>\n              )}\n              {!disableCurrencySelect && <StyledDropDown selected={!!currency} />}\n            </Aligner>\n          </CurrencySelect>\n        </InputRow> */}\n      </Container>\n      {/* {!disableCurrencySelect && onCurrencySelect && (\n        <CurrencySearchModal\n          isOpen={modalOpen}\n          onDismiss={handleDismissSearch}\n          onCurrencySelect={onCurrencySelect}\n          selectedCurrency={currency}\n          otherSelectedCurrency={otherCurrency}\n          showCommonBases={showCommonBases}\n        />\n      )} */}\n    </InputPanel>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}