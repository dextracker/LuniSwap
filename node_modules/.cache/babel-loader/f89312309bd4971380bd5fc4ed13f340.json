{"ast":null,"code":"//import { LUNIORDER_ABI } from '../constants/abis/luniorder';\nimport { useLuniOrderContract } from '../hooks/useContract';\nimport { useActiveWeb3React } from '../hooks';\n// export declare class LuniOrder {\nexport class luniOrder {\n  constructor(_deadline, _tokenPair, _amount, _price) {\n    this.luniOrderContract = void 0;\n    this.deadline = void 0;\n    this.tokenPair = void 0;\n    this.amount = void 0;\n    this.price = void 0;\n    this.luniOrderContract = useLuniOrderContract();\n    this.deadline = _deadline;\n    this.tokenPair = _tokenPair;\n    this.amount = _amount;\n    this.price = _price;\n  }\n\n  deployContract() {\n    const {\n      account\n    } = useActiveWeb3React();\n    console.log(account); //const orderContract = new web3.eth.Contract(LUNIORDER_ABI)\n  }\n\n  setDeadline(_deadline) {}\n\n  checkHash(_deadline, _tokenPair, _amount, _price) {}\n\n  getDeadline() {}\n\n  getHash() {}\n\n  getOrderPrice() {}\n\n  getQuotePair() {}\n\n}","map":{"version":3,"sources":["/home/devpc/LuniSwapGit/uniswap-interface/src/data/luniOrder.ts"],"names":["useLuniOrderContract","useActiveWeb3React","luniOrder","constructor","_deadline","_tokenPair","_amount","_price","luniOrderContract","deadline","tokenPair","amount","price","deployContract","account","console","log","setDeadline","checkHash","getDeadline","getHash","getOrderPrice","getQuotePair"],"mappings":"AAEA;AACA,SAAQA,oBAAR,QAAmC,sBAAnC;AACA,SAASC,kBAAT,QAAmC,UAAnC;AA0CA;AAIA,OAAO,MAAMC,SAAN,CAAgB;AAMnBC,EAAAA,WAAW,CAACC,SAAD,EAA+BC,UAA/B,EAA2DC,OAA3D,EAA4FC,MAA5F,EAAmH;AAAA,SALvHC,iBAKuH;AAAA,SAJvHC,QAIuH;AAAA,SAHvHC,SAGuH;AAAA,SAFvHC,MAEuH;AAAA,SADvHC,KACuH;AAE1H,SAAKJ,iBAAL,GAAyBR,oBAAoB,EAA7C;AACA,SAAKS,QAAL,GAAgBL,SAAhB;AACA,SAAKM,SAAL,GAAiBL,UAAjB;AACA,SAAKM,MAAL,GAAcL,OAAd;AACA,SAAKM,KAAL,GAAaL,MAAb;AAEH;;AAGDM,EAAAA,cAAc,GAAE;AACZ,UAAM;AAAEC,MAAAA;AAAF,QAAcb,kBAAkB,EAAtC;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAFY,CAGZ;AACH;;AAEDG,EAAAA,WAAW,CAACb,SAAD,EAAqB,CAAE;;AAClCc,EAAAA,SAAS,CAACd,SAAD,EAAqBC,UAArB,EAAuCC,OAAvC,EAA8DC,MAA9D,EAAoF,CAAE;;AAC/FY,EAAAA,WAAW,GAAE,CAAE;;AACfC,EAAAA,OAAO,GAAE,CAAE;;AACXC,EAAAA,aAAa,GAAE,CAAE;;AACjBC,EAAAA,YAAY,GAAE,CAAE;;AA5BG","sourcesContent":["import { Contract } from '@ethersproject/contracts'\nimport { CurrencyAmount, Pair, Percent, Price} from '@uniswap/sdk';\n//import { LUNIORDER_ABI } from '../constants/abis/luniorder';\nimport {useLuniOrderContract} from '../hooks/useContract'\nimport { useActiveWeb3React } from '../hooks'\nimport { BigNumber } from 'ethers';\n\n\nexport interface SwapParameters {\n    /**\n     * The method to call on the Uniswap V2 Router.\n     */\n    methodName: string;\n    /**\n     * The arguments to pass to the method, all hex encoded.\n     */\n    args: (string | string[])[];\n    /**\n     * The amount of wei to send in hex.\n     */\n    value: string;\n}\n\n/**\n * Options for producing the arguments to send call to the router.\n */\nexport interface TradeOptions {\n    /**\n     * How much the execution price is allowed to move unfavorably from the trade execution price.\n     */\n    allowedSlippage: Percent;\n    /**\n     * How long the swap is valid until it expires, in seconds.\n     * This will be used to produce a `deadline` parameter which is computed from when the swap call parameters\n     * are generated.\n     */\n    deadline: number;\n    /**\n     * The account that should receive the output of the swap.\n     */\n    recipient: string;\n    /**\n     * Whether any of the tokens in the path are fee on transfer tokens, which should be handled with special methods\n     */\n    feeOnTransfer?: boolean;\n}\n// export declare class LuniOrder {\n\n\n\nexport class luniOrder {\n    public luniOrderContract:Contract|null;\n    public deadline:BigNumber|undefined;\n    public tokenPair:Pair[]|undefined;\n    public amount:CurrencyAmount|undefined;\n    public price:Price|undefined;\n    constructor(_deadline:BigNumber|undefined,_tokenPair:Pair[]|undefined,_amount:CurrencyAmount|undefined,_price:Price|undefined){\n        \n        this.luniOrderContract = useLuniOrderContract();\n        this.deadline = _deadline;\n        this.tokenPair = _tokenPair;\n        this.amount = _amount;\n        this.price = _price;\n        \n    }\n       \n\n    deployContract(){\n        const { account } = useActiveWeb3React()\n        console.log(account);\n        //const orderContract = new web3.eth.Contract(LUNIORDER_ABI)\n    }\n\n    setDeadline(_deadline:BigNumber){}\n    checkHash(_deadline:BigNumber,_tokenPair:Pair[],_amount:CurrencyAmount,_price:CurrencyAmount){}\n    getDeadline(){}\n    getHash(){}\n    getOrderPrice(){}\n    getQuotePair(){}\n}"]},"metadata":{},"sourceType":"module"}