{"ast":null,"code":"var _jsxFileName = \"/home/devpc/LoonySwap/uniswap-interface/src/components/Order/luniTransaction.tsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { darken } from 'polished';\nimport { ButtonRed } from '../../components/Button'; // import { useOrderListContract, useLuniSwapContract, useLuniClaimContract, useLuniPriceContract, useLuniOrderContract} from '../../hooks/useContract'\n\nimport { useOrderListContract, useLuniClaimContract, useLuniPriceContract, useLuniOrderContract } from '../../hooks/useContract';\nimport { PaddedColumn } from '../SearchModal/styleds';\nimport { ContractFactory, utils } from 'ethers';\nimport { LUNIORDER_ABI, LUNIORDER_BYTECODE } from '../../constants/abis/luniorder';\nimport { useActiveWeb3React } from '../../hooks';\nimport useENS from '../../hooks/useENS';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { Token, Pair } from \"@uniswap/sdk\";\nconst LabelRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({\n  theme\n}) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({\n  theme\n}) => darken(0.2, theme.text2)};\n  }\n`;\n\nfunction createContractFactory(library, recipient) {\n  return new ContractFactory(new utils.Interface(LUNIORDER_ABI), LUNIORDER_BYTECODE, library === null || library === void 0 ? void 0 : library.getSigner(recipient).connectUnchecked());\n}\n\nexport default function LuniClaimsButton({\n  recipientAddressOrName,\n  deadline,\n  input,\n  output,\n  token1,\n  token2,\n  id\n}) {\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const {\n    address: recipientAddress\n  } = useENS(recipientAddressOrName);\n  const recipient = recipientAddressOrName === null ? account : recipientAddress;\n  let tx;\n\n  if (!library || !recipient || !chainId || !account || !deadline) {\n    tx = {\n      recipientAddressOrName: null,\n      deadline: null,\n      input: null,\n      output: null,\n      price: null,\n      token1: undefined,\n      token2: undefined,\n      id: \"\"\n    };\n    console.log(tx);\n  } else {\n    const pairAddress = Pair.getAddress(new Token(chainId, token1, 18), new Token(chainId, token2 === null || token2 === void 0 ? void 0 : token2.toString(), 18));\n    tx = {\n      recipientAddressOrName: null,\n      deadline: null,\n      input: null,\n      output: null,\n      price: null,\n      token1: undefined,\n      token2: undefined,\n      id: \"\"\n    };\n  }\n\n  let [sendTransaction, txSendState] = useState(Boolean);\n  console.log(sendTransaction, txSendState);\n  const orderListContract = useOrderListContract();\n  const luniClaimContract = useLuniClaimContract();\n  const luniOrderContract = useLuniOrderContract();\n  const luniPriceContract = useLuniPriceContract();\n  const luniSwap = {\n    luniOrder: luniOrderContract,\n    orderList: orderListContract,\n    luniClaim: luniClaimContract,\n    luniPrice: luniPriceContract\n  };\n  console.log(luniSwap);\n  return /*#__PURE__*/React.createElement(LabelRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PaddedColumn, {\n    gap: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonRed, {\n    id: \"createLuniClaims\",\n    onClick: () => {\n      const contractFactory = createContractFactory(library, recipient);\n      console.log(contractFactory);\n      console.log(tx);\n      const gasTx = contractFactory.getDeployTransaction(tx.deadline, tx.recipientAddressOrName, tx.token1, tx.input, tx.output);\n      const gasEst = library === null || library === void 0 ? void 0 : library.estimateGas(gasTx).then(e => console.log(e));\n      console.log(gasEst);\n      const gas = BigNumber.from(gasEst._hex);\n      console.log(gas);\n\n      (function () {\n        const _contract = contractFactory.deploy('1603742574', utils.getAddress(\"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\"), '1000000000000000000', '250000000000000000').then(cont => {\n          cont.deployTransaction.wait();\n          console.log(cont.deployTransaction);\n        }).catch(error => {\n          let hash = error.transactionHash;\n          console.log(\"Failed to deploy in: \", hash);\n        });\n\n        console.log(_contract);\n      })();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"Create Order\")));\n}","map":{"version":3,"sources":["/home/devpc/LoonySwap/uniswap-interface/src/components/Order/luniTransaction.tsx"],"names":["React","useState","styled","darken","ButtonRed","useOrderListContract","useLuniClaimContract","useLuniPriceContract","useLuniOrderContract","PaddedColumn","ContractFactory","utils","LUNIORDER_ABI","LUNIORDER_BYTECODE","useActiveWeb3React","useENS","BigNumber","Token","Pair","LabelRow","div","theme","flexRowNoWrap","text1","text2","createContractFactory","library","recipient","Interface","getSigner","connectUnchecked","LuniClaimsButton","recipientAddressOrName","deadline","input","output","token1","token2","id","account","chainId","address","recipientAddress","tx","price","undefined","console","log","pairAddress","getAddress","toString","sendTransaction","txSendState","Boolean","orderListContract","luniClaimContract","luniOrderContract","luniPriceContract","luniSwap","luniOrder","orderList","luniClaim","luniPrice","contractFactory","gasTx","getDeployTransaction","gasEst","estimateGas","then","e","gas","from","_hex","_contract","deploy","cont","deployTransaction","wait","catch","error","hash","transactionHash"],"mappings":"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","sourcesContent":["\n\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { darken } from 'polished'\n\nimport {  ButtonRed} from '../../components/Button'\n// import { useOrderListContract, useLuniSwapContract, useLuniClaimContract, useLuniPriceContract, useLuniOrderContract} from '../../hooks/useContract'\nimport { useOrderListContract, useLuniClaimContract, useLuniPriceContract, useLuniOrderContract} from '../../hooks/useContract'\nimport { PaddedColumn } from '../SearchModal/styleds'\nimport { Contract, ContractFactory, utils, Web3Provider } from 'ethers'\nimport { LUNIORDER_ABI, LUNIORDER_BYTECODE} from '../../constants/abis/luniorder'\nimport { useActiveWeb3React } from '../../hooks'\nimport useENS from '../../hooks/useENS'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount, Pair } from \"@uniswap/sdk\";\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.text2)};\n  }\n`\n\ninterface LuniTransaction {\n    recipientAddressOrName: string | null\n    deadline: string | null\n    input: string | null\n    output: string | null\n    price: string | null\n    token1: string | undefined\n    token2: string | undefined\n    id: string \n    \n}\ninterface ILuniSwap{\n    luniOrder:Contract | null ,\n    orderList:Contract | null ,\n    luniClaim:Contract | null ,\n    luniPrice:Contract | null \n}\n\n\nfunction createContractFactory(library:Web3Provider | undefined, recipient: string | null | undefined){\n    return new ContractFactory(new utils.Interface(LUNIORDER_ABI),LUNIORDER_BYTECODE, library?.getSigner(recipient).connectUnchecked());\n}\n\nexport default function LuniClaimsButton({\n    recipientAddressOrName,\n    deadline,    \n    input,\n    output,\n    token1,\n    token2,\n    id,\n    \n}: LuniTransaction) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  let tx: LuniTransaction;\n  if( !library || !recipient || !chainId || !account || !deadline){\n      tx = {\n        recipientAddressOrName : null,\n        deadline : null,\n        input : null,\n        output: null,\n        price : null,\n        token1 : undefined,\n        token2 : undefined,\n        id : \"\"       \n      }\n    console.log(tx)\n  }\n  else{\n    const pairAddress = Pair.getAddress(new Token(chainId, token1 as string ,18),new Token(chainId, token2?.toString(),18))\n    tx = {\n        recipientAddressOrName : null,\n        deadline : null,\n        input : null,\n        output: null,\n        price : null,\n        token1 : undefined,\n        token2 : undefined,\n        id : \"\",\n        \n      }\n  }\n  let [sendTransaction, txSendState] = useState(Boolean);\n  \n  console.log(sendTransaction, txSendState);\n  \n  const orderListContract: Contract | null  = useOrderListContract()  \n  const luniClaimContract: Contract | null = useLuniClaimContract()\n  const luniOrderContract: Contract | null = useLuniOrderContract()\n  const luniPriceContract: Contract | null = useLuniPriceContract()\n  \n  \n  const luniSwap :ILuniSwap = {\n    \n    luniOrder: luniOrderContract,\n    orderList: orderListContract,\n    luniClaim: luniClaimContract,\n    luniPrice: luniPriceContract,\n  }\n  console.log(luniSwap);\n  return (\n          <LabelRow>\n              <PaddedColumn gap='20px'>\n                <ButtonRed id=\"createLuniClaims\" onClick={() =>\n                    {\n                        const contractFactory = createContractFactory(library, recipient)\n                        console.log(contractFactory);\n                        console.log(tx);\n                        const gasTx: any = contractFactory.getDeployTransaction(tx.deadline, tx.recipientAddressOrName, tx.token1, tx.input, tx.output);\n                        const gasEst: any = library?.estimateGas(gasTx).then(e => console.log(e));\n                        console.log(gasEst);\n                        const gas = BigNumber.from(gasEst._hex);\n                        console.log(gas);\n\n                        (function(){\n                            const _contract = contractFactory.deploy('1603742574',utils.getAddress(\"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\"),'1000000000000000000','250000000000000000').then((cont) => {\n                                cont.deployTransaction.wait();\n                                console.log(cont.deployTransaction);\n                                \n                              }).catch((error) => {\n                                let hash = error.transactionHash;\n                                console.log(\"Failed to deploy in: \", hash)\n                              });\n                            console.log(_contract);\n                        })();\n                    }\n                }>Create Order</ButtonRed>\n              </PaddedColumn>\n            \n          </LabelRow>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}