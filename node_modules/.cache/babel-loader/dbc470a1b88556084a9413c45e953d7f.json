{"ast":null,"code":"var _jsxFileName = \"/home/devpc/LoonySwap/uniswap-interface/src/components/Order/luniTransaction.tsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { darken } from 'polished';\nimport { ButtonRed } from '../../components/Button'; // import { useOrderListContract, useLuniSwapContract, useLuniClaimContract, useLuniPriceContract, useLuniOrderContract} from '../../hooks/useContract'\n\nimport { useOrderListContract, useLuniClaimContract, useLuniPriceContract, useLuniOrderContract } from '../../hooks/useContract';\nimport { PaddedColumn } from '../SearchModal/styleds';\nimport { ContractFactory, ethers, utils } from 'ethers';\nimport { LUNIORDER_ABI, LUNIORDER_BYTECODE } from '../../constants/abis/luniorder';\nimport { useActiveWeb3React } from '../../hooks';\nimport useENS from '../../hooks/useENS';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { useAllTokens } from '../../hooks/Tokens';\nimport { ORDERLIST_ABI, ORDERLIST_ADDRESS } from '../../constants/abis/orderlist';\nimport { LUNIPRICE_ABI, LUNIPRICE_ADDRESS } from '../../constants/abis/luniprice'; //import { luniPrice } from '../../data/luniPrice'\n//import { ORDERLIST_ABI, ORDERLIST_BYTECODE } from '../../constants/abis/orderlist'\n//import { Token, Pair } from \"@uniswap/sdk\";\n\nconst LabelRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({\n  theme\n}) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({\n  theme\n}) => darken(0.2, theme.text2)};\n  }\n`;\nvar tokenList = {\n  \"Dai Stablecoin\": \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\",\n  \"Uniswap\": \"0x2404fc115dbcb35dcae5465bd878d155b34017e3\",\n  \"Ether\": \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\",\n  \"Wrapped Ether\": \"0xd0a1e359811322d97991e03f863a0c30c2cf029c\",\n  \"Maker\": \"0x2404fc115dbcb35dcae5465bd878d155b34017e3\"\n};\n\nfunction createContractFactory(library, recipient) {\n  return new ContractFactory(new utils.Interface(LUNIORDER_ABI), LUNIORDER_BYTECODE, library === null || library === void 0 ? void 0 : library.getSigner(recipient).connectUnchecked());\n} //  function orderListTransaction(library:Web3Provider | undefined, recipient: string | null | undefined){\n//    return new ContractFactory(new utils.Interface(ORDERLIST_ABI),ORDERLIST_BYTECODE, library?.getSigner(recipient).connectUnchecked());\n//  }\n\n\nfunction getToken(name) {\n  return tokenList[name];\n}\n\nexport default function LuniClaimsButton({\n  recipientAddressOrName,\n  deadline,\n  input,\n  output,\n  token1,\n  token2,\n  id\n}) {\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const {\n    address: recipientAddress\n  } = useENS(recipientAddressOrName);\n  const recipient = recipientAddressOrName === null ? account : recipientAddress;\n  let tx;\n\n  if (!library || !recipient || !chainId || !account || !deadline) {\n    tx = {\n      recipientAddressOrName: null,\n      deadline: null,\n      input: null,\n      output: null,\n      price: null,\n      token1: undefined,\n      token2: undefined,\n      id: \"\"\n    };\n    console.log(tx);\n  } else {\n    //const pairAddress = Pair.getAddress(new Token(chainId, token1 as string ,18),new Token(chainId, token2?.toString(),18))\n    tx = {\n      recipientAddressOrName: recipient,\n      deadline: deadline,\n      input: input,\n      output: output,\n      price: null,\n      token1: getToken(token1),\n      token2: getToken(token2),\n      id: \"\"\n    };\n  }\n\n  let [sendTransaction, txSendState] = useState(Boolean);\n  console.log(sendTransaction, txSendState);\n  const orderListContract = useOrderListContract();\n  const luniClaimContract = useLuniClaimContract();\n  const luniOrderContract = useLuniOrderContract();\n  const luniPriceContract = useLuniPriceContract();\n  const luniSwap = {\n    luniOrder: luniOrderContract,\n    orderList: orderListContract,\n    luniClaim: luniClaimContract,\n    luniPrice: luniPriceContract\n  };\n  console.log(luniSwap);\n  const tokenList = useAllTokens(); //const loadedUrlParams = useDefaultsFromURLSearch()\n  //const loadedInputCurrency = useCurrency(loadedUrlParams?.inputCurrencyId)\n  //const loadedOutputCurrency = useCurrency(loadedUrlParams?.outputCurrencyId)\n\n  return /*#__PURE__*/React.createElement(LabelRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PaddedColumn, {\n    gap: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonRed, {\n    id: \"createLuniClaims\",\n    onClick: async () => {\n      console.log(tokenList);\n      const contractFactory = createContractFactory(library, recipient); // const orderListTx = orderListTransaction(library, recipient);\n\n      const orderListTx = new ethers.Contract(ORDERLIST_ADDRESS, ORDERLIST_ABI, library);\n      const luniPriceTx = new ethers.Contract(LUNIPRICE_ADDRESS, LUNIPRICE_ABI, library);\n      console.log(contractFactory);\n      var price = await luniPriceTx.callStatic.getPathForTokenToToken(utils.getAddress(tx.token1), utils.getAddress(tx.token2));\n      console.log(price);\n      console.log(tx);\n      var temp = await orderListTx.callStatic.head();\n      var temp2 = await orderListTx.callStatic.get(temp);\n      console.log(temp);\n      console.log(temp2);\n      const gasTx = await contractFactory.getDeployTransaction(tx.deadline, utils.getAddress(\"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\"), utils.parseUnits(tx.input, 18), utils.parseUnits(tx.output, 18)); // const gasTx: any = contractFactory.getDeployTransaction(tx.deadline,  utils.getAddress(tx.token1!), tx.input, tx.output);\n\n      const gasEst = await (library === null || library === void 0 ? void 0 : library.estimateGas(gasTx));\n      console.log(gasEst);\n      const gas = await BigNumber.from(gasEst._hex);\n      console.log(gas);\n\n      (function () {\n        let inp = tx.input;\n        let out = tx.output;\n        console.log(tx.token1);\n\n        const _contract = contractFactory.deploy(tx.deadline, utils.getAddress(tx.token1), utils.parseUnits(inp, 18), utils.parseUnits(out, 18)).then(cont => {\n          cont.deployTransaction.wait();\n          console.log(orderListTx);\n          console.log(cont.deployTransaction);\n        }).catch(error => {\n          let hash = error.transactionHash;\n          console.log(\"Failed to deploy in: \", hash);\n        });\n\n        console.log(_contract);\n      })();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Create Order\")));\n}","map":{"version":3,"sources":["/home/devpc/LoonySwap/uniswap-interface/src/components/Order/luniTransaction.tsx"],"names":["React","useState","styled","darken","ButtonRed","useOrderListContract","useLuniClaimContract","useLuniPriceContract","useLuniOrderContract","PaddedColumn","ContractFactory","ethers","utils","LUNIORDER_ABI","LUNIORDER_BYTECODE","useActiveWeb3React","useENS","BigNumber","useAllTokens","ORDERLIST_ABI","ORDERLIST_ADDRESS","LUNIPRICE_ABI","LUNIPRICE_ADDRESS","LabelRow","div","theme","flexRowNoWrap","text1","text2","tokenList","createContractFactory","library","recipient","Interface","getSigner","connectUnchecked","getToken","name","LuniClaimsButton","recipientAddressOrName","deadline","input","output","token1","token2","id","account","chainId","address","recipientAddress","tx","price","undefined","console","log","sendTransaction","txSendState","Boolean","orderListContract","luniClaimContract","luniOrderContract","luniPriceContract","luniSwap","luniOrder","orderList","luniClaim","luniPrice","contractFactory","orderListTx","Contract","luniPriceTx","callStatic","getPathForTokenToToken","getAddress","temp","head","temp2","get","gasTx","getDeployTransaction","parseUnits","gasEst","estimateGas","gas","from","_hex","inp","out","_contract","deploy","then","cont","deployTransaction","wait","catch","error","hash","transactionHash"],"mappings":"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","sourcesContent":["\n\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { darken } from 'polished'\n\nimport {  ButtonRed} from '../../components/Button'\n// import { useOrderListContract, useLuniSwapContract, useLuniClaimContract, useLuniPriceContract, useLuniOrderContract} from '../../hooks/useContract'\nimport { useOrderListContract, useLuniClaimContract, useLuniPriceContract, useLuniOrderContract} from '../../hooks/useContract'\nimport { PaddedColumn } from '../SearchModal/styleds'\nimport { Contract, ContractFactory, ethers, utils, Web3Provider } from 'ethers'\nimport { LUNIORDER_ABI, LUNIORDER_BYTECODE} from '../../constants/abis/luniorder'\nimport { useActiveWeb3React } from '../../hooks'\nimport useENS from '../../hooks/useENS'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport {useAllTokens} from '../../hooks/Tokens'\nimport { ORDERLIST_ABI, ORDERLIST_ADDRESS} from '../../constants/abis/orderlist'\nimport { LUNIPRICE_ABI, LUNIPRICE_ADDRESS } from '../../constants/abis/luniprice'\n//import { luniPrice } from '../../data/luniPrice'\n//import { ORDERLIST_ABI, ORDERLIST_BYTECODE } from '../../constants/abis/orderlist'\n\n\n//import { Token, Pair } from \"@uniswap/sdk\";\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.text2)};\n  }\n`\n\ninterface LuniTransaction {\n    recipientAddressOrName: string | null\n    deadline: string | null\n    input: string | null\n    output: string | null\n    price: string | null\n    token1: string | undefined\n    token2: string | undefined\n    id: string \n    \n}\ninterface ILuniSwap{\n    luniOrder:Contract | null ,\n    orderList:Contract | null ,\n    luniClaim:Contract | null ,\n    luniPrice:Contract | null \n}\n\n\nvar tokenList: {[key: string]: string} = {\n    \"Dai Stablecoin\": \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\",\n    \"Uniswap\": \"0x2404fc115dbcb35dcae5465bd878d155b34017e3\",\n    \"Ether\": \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\",\n    \"Wrapped Ether\": \"0xd0a1e359811322d97991e03f863a0c30c2cf029c\",\n    \"Maker\": \"0x2404fc115dbcb35dcae5465bd878d155b34017e3\"\n    \n}\n\n\nfunction createContractFactory(library:Web3Provider | undefined, recipient: string | null | undefined){\n    return new ContractFactory(new utils.Interface(LUNIORDER_ABI),LUNIORDER_BYTECODE, library?.getSigner(recipient).connectUnchecked());\n}\n//  function orderListTransaction(library:Web3Provider | undefined, recipient: string | null | undefined){\n//    return new ContractFactory(new utils.Interface(ORDERLIST_ABI),ORDERLIST_BYTECODE, library?.getSigner(recipient).connectUnchecked());\n//  }\n\nfunction getToken(name: string){\n\n    return tokenList[name];\n}\n\nexport default function LuniClaimsButton({\n    recipientAddressOrName,\n    deadline,    \n    input,\n    output,\n    token1,\n    token2,\n    id,\n    \n}: LuniTransaction) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  let tx: LuniTransaction;\n  if( !library || !recipient || !chainId || !account || !deadline){\n      tx = {\n        recipientAddressOrName : null,\n        deadline : null,\n        input : null,\n        output: null,\n        price : null,\n        token1 : undefined,\n        token2 : undefined,\n        id : \"\"       \n      }\n    console.log(tx)\n  }\n  else{\n    //const pairAddress = Pair.getAddress(new Token(chainId, token1 as string ,18),new Token(chainId, token2?.toString(),18))\n    tx = {\n        recipientAddressOrName : recipient,\n        deadline : deadline,\n        input : input,\n        output: output,\n        price : null,\n        token1 : getToken(token1!),\n        token2 : getToken(token2!),\n        id : \"\",\n        \n      }\n  }\n  let [sendTransaction, txSendState] = useState(Boolean);\n  \n  console.log(sendTransaction, txSendState);\n  \n  const orderListContract: Contract | null  = useOrderListContract()  \n  const luniClaimContract: Contract | null = useLuniClaimContract()\n  const luniOrderContract: Contract | null = useLuniOrderContract()\n  const luniPriceContract: Contract | null = useLuniPriceContract()\n  \n  \n  const luniSwap :ILuniSwap = {\n    \n    luniOrder: luniOrderContract,\n    orderList: orderListContract,\n    luniClaim: luniClaimContract,\n    luniPrice: luniPriceContract,\n  }\n  console.log(luniSwap);\n  const tokenList = useAllTokens();\n  //const loadedUrlParams = useDefaultsFromURLSearch()\n  //const loadedInputCurrency = useCurrency(loadedUrlParams?.inputCurrencyId)\n  //const loadedOutputCurrency = useCurrency(loadedUrlParams?.outputCurrencyId)\n  return (\n          <LabelRow>\n              <PaddedColumn gap='20px'>\n                <ButtonRed id=\"createLuniClaims\" onClick={async () =>\n                    {\n                        \n                        console.log(tokenList);\n                        \n                        const contractFactory = createContractFactory(library, recipient);\n                        // const orderListTx = orderListTransaction(library, recipient);\n                        const orderListTx = new ethers.Contract(ORDERLIST_ADDRESS, ORDERLIST_ABI, library);\n                        const luniPriceTx = new ethers.Contract(LUNIPRICE_ADDRESS,LUNIPRICE_ABI, library);\n                        console.log(contractFactory);\n                        var price = await luniPriceTx.callStatic.getPathForTokenToToken(utils.getAddress(tx.token1!),utils.getAddress(tx.token2!));\n                        console.log(price);\n                        console.log(tx);\n                        var temp = await orderListTx.callStatic.head();\n                        var temp2 = await orderListTx.callStatic.get(temp);\n                        console.log(temp);\n                        console.log(temp2);\n                        const gasTx: any = await contractFactory.getDeployTransaction(tx.deadline,  utils.getAddress(\"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\"), utils.parseUnits(tx.input!, 18), utils.parseUnits(tx.output!, 18));\n                        // const gasTx: any = contractFactory.getDeployTransaction(tx.deadline,  utils.getAddress(tx.token1!), tx.input, tx.output);\n                        const gasEst: any = await library?.estimateGas(gasTx)\n                        console.log(gasEst);\n                        const gas = await BigNumber.from(gasEst._hex);\n                        console.log(gas);\n\n                        (function(){\n                            let inp:string = tx.input!;\n                            let out :string = tx.output!;\n                            console.log(tx.token1);\n                            const _contract = contractFactory.deploy(tx.deadline, utils.getAddress(tx.token1!), utils.parseUnits(inp, 18), utils.parseUnits(out, 18)).then((cont) => {\n                                cont.deployTransaction.wait();\n                                console.log(orderListTx);\n                                console.log(cont.deployTransaction);\n                                \n                                \n                              }).catch((error) => {\n                                let hash = error.transactionHash;\n                                console.log(\"Failed to deploy in: \", hash)\n                              });\n                            console.log(_contract);\n                        })();\n                    }\n                }>Create Order</ButtonRed>\n              </PaddedColumn>\n            \n          </LabelRow>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}