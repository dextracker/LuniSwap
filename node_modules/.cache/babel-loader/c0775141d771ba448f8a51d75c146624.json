{"ast":null,"code":"var _jsxFileName = \"/home/devpc/LoonySwap/uniswap-interface/src/components/Order/index.tsx\";\n// import { Currency, Pair } from '@uniswap/sdk'\n// import React, { useState, useContext, useCallback } from 'react'\nimport React, { useState } from 'react'; //import styled, { ThemeContext } from 'styled-components'\n\nimport styled from 'styled-components';\nimport { darken } from 'polished'; //import { useCurrencyBalance } from '../../state/wallet/hooks'\n//import CurrencySearchModal from '../SearchModal/CurrencySearchModal'\n//import CurrencyLogo from '../CurrencyLogo'\n//import DoubleCurrencyLogo from '../DoubleLogo'\n//import { RowBetween } from '../Row'\n//import { TYPE } from '../../theme'\n//import { Input as NumericalInput } from '../NumericalInput'\n//import { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\n//import { ButtonLight, ButtonGreen, ButtonRed} from '../../components/Button'\n\nimport { ButtonGreen, ButtonRed } from '../../components/Button'; //import { RowBetween } from '../../components/Row'\n\nimport { useOrderListContract, useLuniSwapContract, useLuniClaimContract, useLuniPriceContract } from '../../hooks/useContract';\nimport { PaddedColumn } from '../SearchModal/styleds'; //import {useSwapCallback} from '../../hooks/useSwapCallback'\n//import { useActiveWeb3React } from '../../hooks'\n//import { useTranslation } from 'react-i18next'\n// const InputRow = styled.div<{ selected: boolean }>`\n//   ${({ theme }) => theme.flexRowNoWrap}\n//   align-items: center;\n//   padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n// `\n// const CurrencySelect = styled.button<{ selected: boolean }>`\n//   align-items: center;\n//   height: 2.2rem;\n//   font-size: 20px;\n//   font-weight: 500;\n//   background-color: ${({ selected, theme }) => (selected ? theme.bg1 : theme.primary1)};\n//   color: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n//   border-radius: 12px;\n//   box-shadow: ${({ selected }) => (selected ? 'none' : '0px 6px 10px rgba(0, 0, 0, 0.075)')};\n//   outline: none;\n//   cursor: pointer;\n//   user-select: none;\n//   border: none;\n//   padding: 0 0.5rem;\n//   :focus,\n//   :hover {\n//     background-color: ${({ selected, theme }) => (selected ? theme.bg2 : darken(0.05, theme.primary1))};\n//   }\n// `\n\nconst LabelRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({\n  theme\n}) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({\n  theme\n}) => darken(0.2, theme.text2)};\n  }\n`; // const Aligner = styled.span`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n// `\n// const StyledDropDown = styled(DropDown)<{ selected: boolean }>`\n//   margin: 0 0.25rem 0 0.5rem;\n//   height: 35%;\n//   path {\n//     stroke: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n//     stroke-width: 1.5px;\n//   }\n// `\n// const InputPanel = styled.div<{ hideInput?: boolean }>`\n//   ${({ theme }) => theme.flexColumnNoWrap}\n//   position: relative;\n//   border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n//   background-color: ${({ theme }) => theme.bg2};\n//   z-index: 1;\n// `\n// const Container = styled.div<{ hideInput: boolean }>`\n//   border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n//   border: 1px solid ${({ theme }) => theme.bg2};\n//   background-color: ${({ theme }) => theme.bg1};\n// `\n// const StyledTokenName = styled.span<{ active?: boolean }>`\n//   ${({ active }) => (active ? '  margin: 0 0.25rem 0 0.75rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\n//   font-size:  ${({ active }) => (active ? '20px' : '16px')};\n// `\n// const StyledBalanceMax = styled.button`\n//   height: 28px;\n//   background-color: ${({ theme }) => theme.primary5};\n//   border: 1px solid ${({ theme }) => theme.primary5};\n//   border-radius: 0.5rem;\n//   font-size: 0.875rem;\n//   font-weight: 500;\n//   cursor: pointer;\n//   margin-right: 0.5rem;\n//   color: ${({ theme }) => theme.primaryText1};\n//   :hover {\n//     border: 1px solid ${({ theme }) => theme.primary1};\n//   }\n//   :focus {\n//     border: 1px solid ${({ theme }) => theme.primary1};\n//     outline: none;\n//   }\n//   ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n//     margin-right: 0.5rem;\n//   `};\n// `\n\nexport default function LimitOrderButton({\n  //   onCurrencySelect,\n  //   currency,\n  //   disableCurrencySelect = false,\n  //   hideBalance = false,\n  //   pair = null, // used for double token logo\n  hideInput = false,\n  //   otherCurrency,\n  id //   showCommonBases  \n\n}) {\n  let [LimitClick, setLimit] = useState(Boolean);\n  let [StopClick, setStop] = useState(Boolean); //const { t } = useTranslation()\n  //   const [modalOpen, setModalOpen] = useState(false)\n  //const { account } = useActiveWeb3React()\n  //const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  //   const handleDismissSearch = useCallback(() => {\n  //     setModalOpen(false)\n  //   }, [setModalOpen])\n  //const theme = useContext(ThemeContext)\n\n  const orderListContract = useOrderListContract();\n  const luniSwapContract = useLuniSwapContract();\n  const luniClaimContract = useLuniClaimContract();\n  const luniPriceContract = useLuniPriceContract(); //   const handleStopClick = () =>{\n  //     setLimit(false);\n  //     setStop(true);\n  //     console.log(\"StopOrder\");\n  //     console.log(luniContract);\n  //     console.log(orderList);\n  // }\n\n  return /*#__PURE__*/React.createElement(LabelRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, !LimitClick === true && /*#__PURE__*/React.createElement(PaddedColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGreen, {\n    id: \"LimitOrder\",\n    onClick: () => {\n      setLimit(true);\n      setStop(false);\n      console.log(LimitClick);\n      console.log(StopClick);\n      console.log(orderListContract);\n      console.log(luniSwapContract);\n      console.log(luniClaimContract);\n      console.log(luniPriceContract); // console.log(luniContract?.populateTransaction);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, \"Limit Order\")), !StopClick === true && /*#__PURE__*/React.createElement(ButtonRed, {\n    id: \"StopOrder\",\n    onClick: () => {\n      setLimit(false);\n      setStop(true);\n      console.log(LimitClick);\n      console.log(StopClick);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }, \"Stop Order\"));\n  /* <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n    {!hideInput && (\n      <>\n        <NumericalInput\n          className=\"token-amount-input\"\n          value={value}\n          onUserInput={val => {\n            onUserInput(val)\n          }}\n        />\n        {account && currency && showMaxButton && label !== 'To' && (\n          <StyledBalanceMax onClick={onMax}>MAX</StyledBalanceMax>\n        )}\n      </>\n    )}\n    <CurrencySelect\n      selected={!!currency}\n      className=\"open-currency-select-button\"\n      onClick={() => {\n        if (!disableCurrencySelect) {\n          setModalOpen(true)\n        }\n      }}\n    >\n      <Aligner>\n        {pair ? (\n          <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={24} margin={true} />\n        ) : currency ? (\n          <CurrencyLogo currency={currency} size={'24px'} />\n        ) : null}\n        {pair ? (\n          <StyledTokenName className=\"pair-name-container\">\n            {pair?.token0.symbol}:{pair?.token1.symbol}\n          </StyledTokenName>\n        ) : (\n          <StyledTokenName className=\"token-symbol-container\" active={Boolean(currency && currency.symbol)}>\n            {(currency && currency.symbol && currency.symbol.length > 20\n              ? currency.symbol.slice(0, 4) +\n                '...' +\n                currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)\n              : currency?.symbol) || t('selectToken')}\n          </StyledTokenName>\n        )}\n        {!disableCurrencySelect && <StyledDropDown selected={!!currency} />}\n      </Aligner>\n    </CurrencySelect>\n  </InputRow> */\n\n  /* {!disableCurrencySelect && onCurrencySelect && (\n    <CurrencySearchModal\n      isOpen={modalOpen}\n      onDismiss={handleDismissSearch}\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />\n  )} */\n}","map":{"version":3,"sources":["/home/devpc/LoonySwap/uniswap-interface/src/components/Order/index.tsx"],"names":["React","useState","styled","darken","ButtonGreen","ButtonRed","useOrderListContract","useLuniSwapContract","useLuniClaimContract","useLuniPriceContract","PaddedColumn","LabelRow","div","theme","flexRowNoWrap","text1","text2","LimitOrderButton","hideInput","id","LimitClick","setLimit","Boolean","StopClick","setStop","orderListContract","luniSwapContract","luniClaimContract","luniPriceContract","console","log"],"mappings":"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","sourcesContent":["// import { Currency, Pair } from '@uniswap/sdk'\nimport { Currency} from '@uniswap/sdk'\n// import React, { useState, useContext, useCallback } from 'react'\nimport React, { useState } from 'react'\n//import styled, { ThemeContext } from 'styled-components'\nimport styled from 'styled-components'\nimport { darken } from 'polished'\n//import { useCurrencyBalance } from '../../state/wallet/hooks'\n//import CurrencySearchModal from '../SearchModal/CurrencySearchModal'\n//import CurrencyLogo from '../CurrencyLogo'\n//import DoubleCurrencyLogo from '../DoubleLogo'\n//import { RowBetween } from '../Row'\n//import { TYPE } from '../../theme'\n//import { Input as NumericalInput } from '../NumericalInput'\n//import { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\n//import { ButtonLight, ButtonGreen, ButtonRed} from '../../components/Button'\nimport { ButtonGreen, ButtonRed} from '../../components/Button'\n//import { RowBetween } from '../../components/Row'\nimport { useOrderListContract, useLuniSwapContract, useLuniClaimContract, useLuniPriceContract} from '../../hooks/useContract'\nimport { PaddedColumn } from '../SearchModal/styleds'\n\n\n//import {useSwapCallback} from '../../hooks/useSwapCallback'\n\n\n//import { useActiveWeb3React } from '../../hooks'\n//import { useTranslation } from 'react-i18next'\n\n// const InputRow = styled.div<{ selected: boolean }>`\n//   ${({ theme }) => theme.flexRowNoWrap}\n//   align-items: center;\n//   padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n// `\n\n// const CurrencySelect = styled.button<{ selected: boolean }>`\n//   align-items: center;\n//   height: 2.2rem;\n//   font-size: 20px;\n//   font-weight: 500;\n//   background-color: ${({ selected, theme }) => (selected ? theme.bg1 : theme.primary1)};\n//   color: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n//   border-radius: 12px;\n//   box-shadow: ${({ selected }) => (selected ? 'none' : '0px 6px 10px rgba(0, 0, 0, 0.075)')};\n//   outline: none;\n//   cursor: pointer;\n//   user-select: none;\n//   border: none;\n//   padding: 0 0.5rem;\n\n//   :focus,\n//   :hover {\n//     background-color: ${({ selected, theme }) => (selected ? theme.bg2 : darken(0.05, theme.primary1))};\n//   }\n// `\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.text2)};\n  }\n`\n\n// const Aligner = styled.span`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n// `\n\n// const StyledDropDown = styled(DropDown)<{ selected: boolean }>`\n//   margin: 0 0.25rem 0 0.5rem;\n//   height: 35%;\n\n//   path {\n//     stroke: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n//     stroke-width: 1.5px;\n//   }\n// `\n\n// const InputPanel = styled.div<{ hideInput?: boolean }>`\n//   ${({ theme }) => theme.flexColumnNoWrap}\n//   position: relative;\n//   border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n//   background-color: ${({ theme }) => theme.bg2};\n//   z-index: 1;\n// `\n\n// const Container = styled.div<{ hideInput: boolean }>`\n//   border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n//   border: 1px solid ${({ theme }) => theme.bg2};\n//   background-color: ${({ theme }) => theme.bg1};\n// `\n\n// const StyledTokenName = styled.span<{ active?: boolean }>`\n//   ${({ active }) => (active ? '  margin: 0 0.25rem 0 0.75rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\n//   font-size:  ${({ active }) => (active ? '20px' : '16px')};\n\n// `\n\n// const StyledBalanceMax = styled.button`\n//   height: 28px;\n//   background-color: ${({ theme }) => theme.primary5};\n//   border: 1px solid ${({ theme }) => theme.primary5};\n//   border-radius: 0.5rem;\n//   font-size: 0.875rem;\n\n//   font-weight: 500;\n//   cursor: pointer;\n//   margin-right: 0.5rem;\n//   color: ${({ theme }) => theme.primaryText1};\n//   :hover {\n//     border: 1px solid ${({ theme }) => theme.primary1};\n//   }\n//   :focus {\n//     border: 1px solid ${({ theme }) => theme.primary1};\n//     outline: none;\n//   }\n\n//   ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n//     margin-right: 0.5rem;\n//   `};\n// `\n\ninterface LuniOrder {\n//   value: string\n//   onUserInput: (value: string) => void\n//   onMax?: () => void\n//   showMaxButton: boolean\n//   label?: string\n//   onCurrencySelect?: (currency: Currency) => void\n//   currency?: Currency | null\n//   disableCurrencySelect?: boolean\n//   hideBalance?: boolean\n//   pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n//   customBalanceText?: string\n}\n\nexport default function LimitOrderButton({\n  \n//   onCurrencySelect,\n//   currency,\n//   disableCurrencySelect = false,\n//   hideBalance = false,\n//   pair = null, // used for double token logo\n  hideInput = false,\n//   otherCurrency,\n  id,\n//   showCommonBases  \n}: LuniOrder) {\n  let [LimitClick, setLimit] = useState(Boolean);\n  \n  let [StopClick, setStop] = useState(Boolean);\n  \n\n  //const { t } = useTranslation()\n\n  //   const [modalOpen, setModalOpen] = useState(false)\n  \n  //const { account } = useActiveWeb3React()\n  //const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  \n\n  //   const handleDismissSearch = useCallback(() => {\n  //     setModalOpen(false)\n  //   }, [setModalOpen])\n  //const theme = useContext(ThemeContext)\n  const orderListContract = useOrderListContract();\n  const luniSwapContract = useLuniSwapContract();\n  const luniClaimContract = useLuniClaimContract();\n  const luniPriceContract = useLuniPriceContract();\n\n\n    \n  //   const handleStopClick = () =>{\n  //     setLimit(false);\n  //     setStop(true);\n  //     console.log(\"StopOrder\");\n  \n  //     console.log(luniContract);\n  //     console.log(orderList);\n  // }\n\n\n  return (\n          <LabelRow>\n            \n             {!LimitClick === true && (\n               <PaddedColumn>\n              <ButtonGreen id=\"LimitOrder\" onClick={() =>{\n                setLimit(true);\n                setStop(false);\n                console.log(LimitClick);\n                console.log(StopClick);\n                console.log(orderListContract);\n                console.log(luniSwapContract);\n                console.log(luniClaimContract);\n                console.log(luniPriceContract);\n                \n                // console.log(luniContract?.populateTransaction);\n                \n              }\n              }>Limit Order</ButtonGreen>\n              </PaddedColumn>\n             )\n            }\n            {\n             !StopClick === true &&(\n              <ButtonRed id=\"StopOrder\" onClick={() =>{\n                setLimit(false);\n                setStop(true);\n                console.log(LimitClick);\n                console.log(StopClick);\n                \n                \n              }\n              }>Stop Order</ButtonRed>\n             )\n            }\n          </LabelRow>\n  )\n       \n        /* <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={val => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <StyledBalanceMax onClick={onMax}>MAX</StyledBalanceMax>\n              )}\n            </>\n          )}\n          <CurrencySelect\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                setModalOpen(true)\n              }\n            }}\n          >\n            <Aligner>\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={24} margin={true} />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size={'24px'} />\n              ) : null}\n              {pair ? (\n                <StyledTokenName className=\"pair-name-container\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </StyledTokenName>\n              ) : (\n                <StyledTokenName className=\"token-symbol-container\" active={Boolean(currency && currency.symbol)}>\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? currency.symbol.slice(0, 4) +\n                      '...' +\n                      currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)\n                    : currency?.symbol) || t('selectToken')}\n                </StyledTokenName>\n              )}\n              {!disableCurrencySelect && <StyledDropDown selected={!!currency} />}\n            </Aligner>\n          </CurrencySelect>\n        </InputRow> */\n      \n      /* {!disableCurrencySelect && onCurrencySelect && (\n        <CurrencySearchModal\n          isOpen={modalOpen}\n          onDismiss={handleDismissSearch}\n          onCurrencySelect={onCurrencySelect}\n          selectedCurrency={currency}\n          otherSelectedCurrency={otherCurrency}\n          showCommonBases={showCommonBases}\n        />\n      )} */\n   \n\n}\n"]},"metadata":{},"sourceType":"module"}