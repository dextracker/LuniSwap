{"ast":null,"code":"var _jsxFileName = \"/home/devpc/LoonySwap/uniswap-interface/src/components/DeadlineInput/index.tsx\";\n//import { Currency, Pair } from '@uniswap/sdk'\n// import React, { useState, useContext, useCallback } from 'react'\nimport React, { useContext, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components'; // import styled, { ThemeContext } from 'styled-components'\n\nimport { darken } from 'polished'; //import { useCurrencyBalance } from '../../state/wallet/hooks'\n//import CurrencySearchModal from '../SearchModal/CurrencySearchModal'\n//import CurrencyLogo from '../CurrencyLogo'\n//import DoubleCurrencyLogo from '../DoubleLogo'\n\nimport { RowBetween } from '../Row';\nimport { TYPE } from '../../theme';\nimport Column, { AutoColumn } from '../Column'; //import { TYPE } from '../../theme'\n//import { Input as NumericalInput } from '../NumericalInput'\n//import { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\n// import { useActiveWeb3React } from '../../hooks'\n// import { useTranslation } from 'react-i18next'\n// const InputRow = styled.div<{ selected: boolean }>`\n//   ${({ theme }) => theme.flexRowNoWrap}\n//   align-items: center;\n//   padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n// `\n// const CurrencySelect = styled.button<{ selected: boolean }>`\n//   align-items: center;\n//   height: 2.2rem;\n//   font-size: 20px;\n//   font-weight: 500;\n//   background-color: ${({ selected, theme }) => (selected ? theme.bg1 : theme.primary1)};\n//   color: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n//   border-radius: 12px;\n//   box-shadow: ${({ selected }) => (selected ? 'none' : '0px 6px 10px rgba(0, 0, 0, 0.075)')};\n//   outline: none;\n//   cursor: pointer;\n//   user-select: none;\n//   border: none;\n//   padding: 0 0.5rem;\n//   :focus,\n//   :hover {\n//     background-color: ${({ selected, theme }) => (selected ? theme.bg2 : darken(0.05, theme.primary1))};\n//   }\n// `\n\nconst LabelRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({\n  theme\n}) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({\n  theme\n}) => darken(0.2, theme.text2)};\n  }\n`; // const Aligner = styled.span`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n// `\n// const StyledDropDown = styled(DropDown)<{ selected: boolean }>`\n//   margin: 0 0.25rem 0 0.5rem;\n//   height: 35%;\n//   path {\n//     stroke: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n//     stroke-width: 1.5px;\n//   }\n// `\n\nconst InputPanel = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap}\n  position: relative;\n  border-radius: ${({\n  hideInput\n}) => hideInput ? '8px' : '20px'};\n  background-color: ${({\n  theme\n}) => theme.bg2};\n  z-index: 1;\n`;\nconst Container = styled.div`\n  border-radius: ${({\n  hideInput\n}) => hideInput ? '8px' : '20px'};\n  border: 1px solid ${({\n  theme\n}) => theme.bg2};\n  background-color: ${({\n  theme\n}) => theme.bg1};\n`; // const DeadLine = styled.input`\n//     ${({ theme }) => theme.flexRowNoWrap}\n//     background-color: ${({theme }) => (theme.bg1)};\n//     align-items: center;\n//     color: ${({ theme }) => theme.text1};\n//     font-size: 0.75rem;\n//     line-height: 1rem;\n//     padding: 0.75rem 1rem 0 1rem;\n//     span:hover {\n//     cursor: pointer;\n//     color: ${({ theme }) => darken(0.2, theme.text2)};\n//     }\n// `\n\nconst DeadIn = styled.input`\n    background-color: ${({\n  theme\n}) => theme.bg1};\n    font-size: 24px;\n    color: ${({\n  theme\n}) => theme.text1};\n    padding: 0.125rem 0.25rem 0.25rem 0.25rem;\n    outline: 0;\n    border-width:0px;\n    border:0;\n    width: 100%;\n    span:hover {\n    cursor: pointer;    \n    color: ${({\n  theme\n}) => darken(0.2, theme.text2)};\n    }`; // const StyledTokenName = styled.span<{ active?: boolean }>`\n//   ${({ active }) => (active ? '  margin: 0 0.25rem 0 0.75rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\n//   font-size:  ${({ active }) => (active ? '20px' : '16px')};\n// `\n// const StyledBalanceMax = styled.button`\n//   height: 28px;\n//   background-color: ${({ theme }) => theme.primary5};\n//   border: 1px solid ${({ theme }) => theme.primary5};\n//   border-radius: 0.5rem;\n//   font-size: 0.875rem;\n//   font-weight: 500;\n//   cursor: pointer;\n//   margin-right: 0.5rem;\n//   color: ${({ theme }) => theme.primaryText1};\n//   :hover {\n//     border: 1px solid ${({ theme }) => theme.primary1};\n//   }\n//   :focus {\n//     border: 1px solid ${({ theme }) => theme.primary1};\n//     outline: none;\n//   }\n//   ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n//     margin-right: 0.5rem;\n//   `};\n// `\n// interface CurrencyInputPanelProps {\n//   value: string\n//   onUserInput: (value: string) => void\n//   onMax?: () => void\n//   showMaxButton: boolean\n//   label?: string\n//   onCurrencySelect?: (currency: Currency) => void\n//   currency?: Currency | null\n//   disableCurrencySelect?: boolean\n//   hideBalance?: boolean\n//   pair?: Pair | null\n//   hideInput?: boolean\n//   otherCurrency?: Currency | null\n//   id: string\n//   showCommonBases?: boolean\n//   customBalanceText?: string\n// }\n\nexport default function DeadlineInput({\n  date,\n  time,\n  setDate,\n  setTime\n}) {\n  //   onMax,\n  //   showMaxButton,\n  //   label = 'Input',\n  //   onCurrencySelect,\n  //   currency,\n  //   disableCurrencySelect = false,\n  //   hideBalance = false,\n  //   pair = null, // used for double token logo\n  //   hideInput = false,\n  //   otherCurrency,\n  //   id,\n  //   showCommonBases,\n  //   customBalanceText\n  // }: CurrencyInputPanelProps) {\n  //   const { t } = useTranslation()\n  //   const [modalOpen, setModalOpen] = useState(false)\n  //   const { account } = useActiveWeb3React()\n  //   const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  //   const theme = useContext(ThemeContext)\n  //   const handleDismissSearch = useCallback(() => {\n  //     setModalOpen(false)\n  //   }, [setModalOpen])\n  const [display, Display] = useState(Boolean);\n  console.log(date);\n  console.log(time);\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/React.createElement(InputPanel, {\n    id: \"deadlineInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    hideInput: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LabelRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text5,\n    fontWeight: 500,\n    fontSize: 14,\n    onMouseOver: ev => Display(true),\n    onMouseLeave: ev => Display(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, \"Order Duration\", display && /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text5,\n    fontWeight: 200,\n    fontSize: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, \"(How Long the order will stay on chain before a revert)\"), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(LabelRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text5,\n    fontWeight: 200,\n    fontSize: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, \"Date :\"), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DeadIn, {\n    type: \"date\",\n    id: \"deadlineDate\",\n    value: date,\n    name: \"date\",\n    onChange: ev => setDate(ev.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text5,\n    fontWeight: 200,\n    fontSize: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, \"Time :\"), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DeadIn, {\n    type: \"time\",\n    id: \"deadlineTime\",\n    value: time,\n    name: \"time\",\n    onChange: // event => setTime(event.target.value)\n    ev => setTime(ev.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/devpc/LoonySwap/uniswap-interface/src/components/DeadlineInput/index.tsx"],"names":["React","useContext","useState","styled","ThemeContext","darken","RowBetween","TYPE","Column","AutoColumn","LabelRow","div","theme","flexRowNoWrap","text1","text2","InputPanel","flexColumnNoWrap","hideInput","bg2","Container","bg1","DeadIn","input","DeadlineInput","date","time","setDate","setTime","display","Display","Boolean","console","log","text5","ev","target","value"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,MAAP,IAAiBC,YAAjB,QAAsC,mBAAtC,C,CACA;;AACA,SAASC,MAAT,QAAuB,UAAvB,C,CACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,WAAnC,C,CACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAGP,MAAM,CAACQ,GAAI;IACxB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,aAAc;;WAE5B,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,KAAM;;;;;;aAMzB,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeP,MAAM,CAAC,GAAD,EAAMO,KAAK,CAACG,KAAZ,CAAmB;;CATrD,C,CAaA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAGb,MAAM,CAACQ,GAA6B;IACnD,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,gBAAiB;;mBAEvB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoBA,SAAS,GAAG,KAAH,GAAW,MAAQ;sBAC7C,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACO,GAAI;;CAJ/C;AAQA,MAAMC,SAAS,GAAGjB,MAAM,CAACQ,GAA4B;mBAClC,CAAC;AAAEO,EAAAA;AAAF,CAAD,KAAoBA,SAAS,GAAG,KAAH,GAAW,MAAQ;sBAC7C,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACO,GAAI;sBACzB,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACS,GAAI;CAH/C,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,MAAMC,MAAM,GAAGnB,MAAM,CAACoB,KAAM;wBACJ,CAAC;AAACX,EAAAA;AAAD,CAAD,KAAeA,KAAK,CAACS,GAAK;;aAErC,CAAC;AAAET,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,KAAM;;;;;;;;aAQ3B,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeP,MAAM,CAAC,GAAD,EAAMO,KAAK,CAACG,KAAZ,CAAmB;MAXrD,C,CAeA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASS,aAAT,CAAuB;AACnCC,EAAAA,IADmC;AAEnCC,EAAAA,IAFmC;AAGnCC,EAAAA,OAHmC;AAInCC,EAAAA;AAJmC,CAAvB,EAWZ;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA,QAAM,CAACC,OAAD,EAAUC,OAAV,IAAqB5B,QAAQ,CAAC6B,OAAD,CAAnC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,QAAMd,KAAK,GAAGX,UAAU,CAACG,YAAD,CAAxB;AAGE,sBACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAEQ,KAAK,CAACsB,KAAxB;AAA+B,IAAA,UAAU,EAAE,GAA3C;AAAgD,IAAA,QAAQ,EAAE,EAA1D;AAA8D,IAAA,WAAW,EACjEC,EADmE,IAExDL,OAAO,CAAC,IAAD,CAF1B;AAGU,IAAA,YAAY,EACVK,EADY,IAELL,OAAO,CAAC,KAAD,CAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAQSD,OAAO,iBACJ,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAEjB,KAAK,CAACsB,KAAxB;AAA+B,IAAA,UAAU,EAAE,GAA3C;AAAgD,IAAA,QAAQ,EAAE,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DATZ,eAcQ,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdR,CADA,CADA,CADF,eAqBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAEtB,KAAK,CAACsB,KAAxB;AAA+B,IAAA,UAAU,EAAE,GAA3C;AAAgD,IAAA,QAAQ,EAAE,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,MADT;AACgB,IAAA,EAAE,EAAC,cADnB;AACkC,IAAA,KAAK,EAAET,IADzC;AAC+C,IAAA,IAAI,EAAC,MADpD;AAC2D,IAAA,QAAQ,EAGvDU,EADJ,IAEWR,OAAO,CAACQ,EAAE,CAACC,MAAH,CAAUC,KAAX,CAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADA,eAiBA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBA,eAmBA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAEzB,KAAK,CAACsB,KAAxB;AAA+B,IAAA,UAAU,EAAE,GAA3C;AAAgD,IAAA,QAAQ,EAAE,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,MADT;AACgB,IAAA,EAAE,EAAC,cADnB;AACkC,IAAA,KAAK,EAAER,IADzC;AAC+C,IAAA,IAAI,EAAC,MADpD;AAC2D,IAAA,QAAQ,EAC3D;AAEIS,IAAAA,EADJ,IAEWP,OAAO,CAACO,EAAE,CAACC,MAAH,CAAUC,KAAX,CAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAnBA,CArBF,CADF,CADF;AAgLD","sourcesContent":["//import { Currency, Pair } from '@uniswap/sdk'\n// import React, { useState, useContext, useCallback } from 'react'\nimport React,{ useContext, useState} from 'react'\nimport styled, { ThemeContext }  from 'styled-components'\n// import styled, { ThemeContext } from 'styled-components'\nimport { darken } from 'polished'\n//import { useCurrencyBalance } from '../../state/wallet/hooks'\n//import CurrencySearchModal from '../SearchModal/CurrencySearchModal'\n//import CurrencyLogo from '../CurrencyLogo'\n//import DoubleCurrencyLogo from '../DoubleLogo'\nimport { RowBetween } from '../Row'\nimport { TYPE } from '../../theme'\nimport Column, { AutoColumn } from '../Column'\n//import { TYPE } from '../../theme'\n//import { Input as NumericalInput } from '../NumericalInput'\n//import { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\n\n// import { useActiveWeb3React } from '../../hooks'\n// import { useTranslation } from 'react-i18next'\n\n// const InputRow = styled.div<{ selected: boolean }>`\n//   ${({ theme }) => theme.flexRowNoWrap}\n//   align-items: center;\n//   padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n// `\n\n// const CurrencySelect = styled.button<{ selected: boolean }>`\n//   align-items: center;\n//   height: 2.2rem;\n//   font-size: 20px;\n//   font-weight: 500;\n//   background-color: ${({ selected, theme }) => (selected ? theme.bg1 : theme.primary1)};\n//   color: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n//   border-radius: 12px;\n//   box-shadow: ${({ selected }) => (selected ? 'none' : '0px 6px 10px rgba(0, 0, 0, 0.075)')};\n//   outline: none;\n//   cursor: pointer;\n//   user-select: none;\n//   border: none;\n//   padding: 0 0.5rem;\n\n//   :focus,\n//   :hover {\n//     background-color: ${({ selected, theme }) => (selected ? theme.bg2 : darken(0.05, theme.primary1))};\n//   }\n// `\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.text2)};\n  }\n`\n\n// const Aligner = styled.span`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n// `\n\n// const StyledDropDown = styled(DropDown)<{ selected: boolean }>`\n//   margin: 0 0.25rem 0 0.5rem;\n//   height: 35%;\n\n//   path {\n//     stroke: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n//     stroke-width: 1.5px;\n//   }\n// `\n\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.bg2};\n  z-index: 1;\n`\n\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  border: 1px solid ${({ theme }) => theme.bg2};\n  background-color: ${({ theme }) => theme.bg1};\n`\n// const DeadLine = styled.input`\n//     ${({ theme }) => theme.flexRowNoWrap}\n//     background-color: ${({theme }) => (theme.bg1)};\n//     align-items: center;\n//     color: ${({ theme }) => theme.text1};\n//     font-size: 0.75rem;\n//     line-height: 1rem;\n//     padding: 0.75rem 1rem 0 1rem;\n//     span:hover {\n//     cursor: pointer;\n//     color: ${({ theme }) => darken(0.2, theme.text2)};\n//     }\n    \n// `\n\n\nconst DeadIn = styled.input`\n    background-color: ${({theme }) => (theme.bg1)};\n    font-size: 24px;\n    color: ${({ theme }) => theme.text1};\n    padding: 0.125rem 0.25rem 0.25rem 0.25rem;\n    outline: 0;\n    border-width:0px;\n    border:0;\n    width: 100%;\n    span:hover {\n    cursor: pointer;    \n    color: ${({ theme }) => darken(0.2, theme.text2)};\n    }`\n\n\n// const StyledTokenName = styled.span<{ active?: boolean }>`\n//   ${({ active }) => (active ? '  margin: 0 0.25rem 0 0.75rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\n//   font-size:  ${({ active }) => (active ? '20px' : '16px')};\n\n// `\n\n// const StyledBalanceMax = styled.button`\n//   height: 28px;\n//   background-color: ${({ theme }) => theme.primary5};\n//   border: 1px solid ${({ theme }) => theme.primary5};\n//   border-radius: 0.5rem;\n//   font-size: 0.875rem;\n\n//   font-weight: 500;\n//   cursor: pointer;\n//   margin-right: 0.5rem;\n//   color: ${({ theme }) => theme.primaryText1};\n//   :hover {\n//     border: 1px solid ${({ theme }) => theme.primary1};\n//   }\n//   :focus {\n//     border: 1px solid ${({ theme }) => theme.primary1};\n//     outline: none;\n//   }\n\n//   ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n//     margin-right: 0.5rem;\n//   `};\n// `\n\n// interface CurrencyInputPanelProps {\n//   value: string\n//   onUserInput: (value: string) => void\n//   onMax?: () => void\n//   showMaxButton: boolean\n//   label?: string\n//   onCurrencySelect?: (currency: Currency) => void\n//   currency?: Currency | null\n//   disableCurrencySelect?: boolean\n//   hideBalance?: boolean\n//   pair?: Pair | null\n//   hideInput?: boolean\n//   otherCurrency?: Currency | null\n//   id: string\n//   showCommonBases?: boolean\n//   customBalanceText?: string\n// }\n\nexport default function DeadlineInput({\n   date,\n   time,\n   setDate,\n   setTime\n}:{\n  date:string\n  time:string\n  setDate: (date: string) => string\n  setTime:(time: string) => string\n\n}) {\n//   onMax,\n//   showMaxButton,\n//   label = 'Input',\n//   onCurrencySelect,\n//   currency,\n//   disableCurrencySelect = false,\n//   hideBalance = false,\n//   pair = null, // used for double token logo\n//   hideInput = false,\n//   otherCurrency,\n//   id,\n//   showCommonBases,\n//   customBalanceText\n// }: CurrencyInputPanelProps) {\n\n//   const { t } = useTranslation()\n\n//   const [modalOpen, setModalOpen] = useState(false)\n//   const { account } = useActiveWeb3React()\n//   const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n//   const theme = useContext(ThemeContext)\n\n//   const handleDismissSearch = useCallback(() => {\n//     setModalOpen(false)\n//   }, [setModalOpen])\n\n\nconst [display, Display] = useState(Boolean)\nconsole.log(date);\nconsole.log(time);\nconst theme = useContext(ThemeContext)\n\n\n  return (\n    <InputPanel id='deadlineInput'>\n      <Container hideInput={false} >\n        <LabelRow>\n        <Column>\n        <TYPE.body color={theme.text5} fontWeight={500} fontSize={14} onMouseOver={(\n                ev: React.MouseEvent<HTMLInputElement>,\n                ): void => Display(true)\n                } onMouseLeave={(\n                    ev: React.MouseEvent<HTMLInputElement>,\n                ): void => Display(false)\n                }>\n                Order Duration\n                {display && (\n                    <TYPE.body color={theme.text5} fontWeight={200} fontSize={10}>\n                        (How Long the order will stay on chain before a revert)\n                    </TYPE.body>\n                    \n                )}\n                <RowBetween></RowBetween>\n            </TYPE.body>\n        </Column>  \n        </LabelRow>\n        <LabelRow>\n        <AutoColumn justify='space-between'>\n            <TYPE.body color={theme.text5} fontWeight={200} fontSize={10}>\n                Date :                   \n            </TYPE.body>\n            <RowBetween></RowBetween>\n            <DeadIn\n                type=\"date\" id=\"deadlineDate\" value={date} name=\"date\" onChange={\n                    \n                    (\n                        ev: React.ChangeEvent<HTMLInputElement>,\n                    ): void => setDate(ev.target.value)\n\n                    \n                }\n            />\n        </AutoColumn>\n        <Column>\n        </Column>\n        <AutoColumn justify='space-between'>\n            <TYPE.body color={theme.text5} fontWeight={200} fontSize={10}>\n                Time :                   \n            </TYPE.body>\n            <RowBetween></RowBetween>\n            <DeadIn\n                type=\"time\" id=\"deadlineTime\" value={time} name=\"time\" onChange={\n                    // event => setTime(event.target.value)\n                    (\n                        ev: React.ChangeEvent<HTMLInputElement>,\n                    ): void => setTime(ev.target.value)\n                    \n                }\n            />\n        </AutoColumn>\n        </LabelRow>\n        {/* <LabelRow>\n            <RowBetween>\n            <ColumnCenter >\n            <DeadIn\n                type=\"date\" id=\"deadlineDate\" value={date} name=\"date\" onChange={\n                    (\n                        ev: React.ChangeEvent<HTMLInputElement>,\n                    ): void => setDate(ev.target.value)\n\n                    \n                }\n            />\n            </ColumnCenter>\n            \n            <ColumnCenter>\n            <DeadIn\n                type=\"time\" id=\"deadlineTime\" value={time} name=\"time\" onChange={\n                    // event => setTime(event.target.value)\n                    (\n                        ev: React.ChangeEvent<HTMLInputElement>,\n                    ): void => setTime(ev.target.value)\n                    \n                }\n            />\n            </ColumnCenter>\n\n            </RowBetween>\n          </LabelRow> */}\n            {/* <div id=\"deadlineInputDiv\"> */}\n\n\n\n          {/* <input type=\"date\" id=\"deadlineInput\" name=\"trip-start\"\n          value=\"2018-07-22\"\n          min=\"2018-01-01\" max=\"2018-12-31\"></input> */}\n\n\n          {/* <input type=\"time\" id=\"deadlineTime\" name=\"deadlineTime\"  required></input> */}\n\n        {/* </div> */}\n              {/* <TYPE.body color={theme.text2} fontWeight={500} fontSize={14}>\n                {label}\n              </TYPE.body>\n              {account && (\n                <TYPE.body\n                  onClick={onMax}\n                  color={theme.text2}\n                  fontWeight={500}\n                  fontSize={14}\n                  style={{ display: 'inline', cursor: 'pointer' }}\n                >\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? (customBalanceText ?? 'Balance: ') + selectedCurrencyBalance?.toSignificant(6)\n                    : ' -'}\n                </TYPE.body>\n              )} */}\n          \n        \n        {/* <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={val => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <StyledBalanceMax onClick={onMax}>MAX</StyledBalanceMax>\n              )}\n            </>\n          )}\n          <CurrencySelect\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                setModalOpen(true)\n              }\n            }}\n          >\n            <Aligner>\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={24} margin={true} />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size={'24px'} />\n              ) : null}\n              {pair ? (\n                <StyledTokenName className=\"pair-name-container\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </StyledTokenName>\n              ) : (\n                <StyledTokenName className=\"token-symbol-container\" active={Boolean(currency && currency.symbol)}>\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? currency.symbol.slice(0, 4) +\n                      '...' +\n                      currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)\n                    : currency?.symbol) || t('selectToken')}\n                </StyledTokenName>\n              )}\n              {!disableCurrencySelect && <StyledDropDown selected={!!currency} />}\n            </Aligner>\n          </CurrencySelect>\n        </InputRow> */}\n      </Container>\n      {/* {!disableCurrencySelect && onCurrencySelect && (\n        <CurrencySearchModal\n          isOpen={modalOpen}\n          onDismiss={handleDismissSearch}\n          onCurrencySelect={onCurrencySelect}\n          selectedCurrency={currency}\n          otherSelectedCurrency={otherCurrency}\n          showCommonBases={showCommonBases}\n        />\n      )} */}\n    </InputPanel>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}